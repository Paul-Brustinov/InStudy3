@model InStudy.Models.User

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    using (Html.BeginForm())
    {
      //  @Html.AntiForgeryToken()
        <h2>Registration</h2>
        <div class="form-horizontal">
            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailID, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailID, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.EmailID, "", new {@class = "text-danger"})
                    @Html.ValidationMessage("EmailExists", new {@class = "text-danger"})
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateBirth, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateBirth, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.DateBirth, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @*<input type="submit" value="Create" class="btn btn-default"/>*@
                    @*                  @Html.ActionLink("Save", "Registration", "User", null, new { @class = "btn btn-default" })*@
                    @Ajax.ActionLink("Registration", "Registration", "User", new AjaxOptions { HttpMethod = "POST" }, null, new { @class = "btn btn-default" })    
                </div>
            </div>
        </div>

        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong> Error!</strong> @ViewBag.Message
            </div>
        }

    }
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
